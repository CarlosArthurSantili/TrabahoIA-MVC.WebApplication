@*

*@
@model FrontModel;
@{

}

<h1>Algoritmos</h1>

<div class="grid-container">
    @foreach (var id in Model.IdsDictionary)
    {
        if (Model.ShelvesList.Contains(id.Key))
        {
            <div id="@id.Key">@id.Value</div>
        }
        else if (id.Key == "A12")
        {
            <div style="background-color: green" id="@id.Key">R1</div>
        }
        else if (id.Key == "B12")
        {
            <div style="background-color: orchid" id="@id.Key">R2</div>
        }
        else if (id.Key == "C12")
        {
            <div style="background-color: orange" id="@id.Key">R3</div>
        }
        else if (id.Key == "D12")
        {
            <div style="background-color: yellow" id="@id.Key">R4</div>
        }
        else if (id.Key == "E12")
        {
            <div style="background-color: skyblue" id="@id.Key">R5</div>
        }
        else if (Model.UnreachbleIds.Contains(id.Key))
        {
            //não adicionar nada
        }
        else if (id.Key == "O11")
        {
            <div id="@id.Key">X</div>
        }
        else
        {
            <div id="@id.Key">⠀</div>
        }
    }
</div>

<br>
<br>




@using (Html.BeginForm("Algoritmos", "Home", FormMethod.Post))
{
    <button type="button" class="alert" onclick="WalkThrough()">Rodar animação</button>

    <div class="form-group">
        <label>
            Insira o valor:
        </label>
        @Html.TextBoxFor(m => m.VerticeDestino, new { @class = "form-control", @placeholder = "Insira o local onde tu quer que o robô vá!", @style = "width: 350px" })
    </div>

    <div>
        <label>Por favor, Selecione um algoritmo:</label>
        @Html.DropDownListFor(m => m.AlgoritmoEscolhido, new List<SelectListItem>
                   { new SelectListItem{Text="Algoritmo em profundidade", Value="Algoritmo1"},
                     new SelectListItem{Text="Algoritmo em largura", Value="Algoritmo2"},
                     new SelectListItem{Text="Busca em A*", Value="Algoritmo3"},
                     new SelectListItem{Text="Busca bidirecional", Value="Algoritmo4"},
                     new SelectListItem{Text="Algoritmo5", Value="Algoritmo5"}},
                     new { @class = "form-control", @type = "button", @style = "width: 350px" })
    </div>
    <br>
    <br>

    <div>
        <input type="submit" class="alert" value="Começar" onclick="WalkThrough()" />
    </div>

}

@ViewBag.caminho2

<script>
    
    var stringcaminho = "@(ViewBag.caminho2)";

    async function WalkThrough() {
        console.log(stringcaminho);
        var caminho = stringcaminho.split("-");
        console.log(caminho);
        var count = caminho.length;
        console.log(count);
        console.log(caminho.length);
        document.getElementById(caminho[0]).style = "background-color: #c5c5de";
        console.log(caminho[0]);
        for (var i = 0; i < count; i++) {
            if (i == (count - 1)) {
                document.getElementById(caminho[i]).style = "background-color: red";
            }
            else {
                document.getElementById(caminho[i]).style = "background-color: red";
                await sleep(300);
                document.getElementById(caminho[i]).style = "background-color: #c5c5de";
                await sleep(300);
            }
        }
    }

    function sleep(ms) {
        return new Promise(
            resolve => setTimeout(resolve, ms)
        );
    }
</script>



<style>
    .grid-container {
        width: 75%;
        display: grid;
        grid-template-columns: 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6% 6.6%;
        grid-gap: 1%;
        background-color: white;
        padding: 3.5%;
    }

        .grid-container > div {
            background-color: #c5c5de;
            text-align: center;
            padding: 0px;
            font-size: 25px;
        }
</style>
