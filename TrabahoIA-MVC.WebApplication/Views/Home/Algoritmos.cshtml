@*

*@
@model FrontModel;
@{

}

<h1>Algoritmos</h1>

<div class="grid-container" style="width: auto">
    @foreach (var id in Model.IdsDictionary)
    {
        if (Model.ShelvesList.Contains(id.Key))
        {
            <div class="bg-image hover-overlay" id="@id.Key">@id.Value</div>
        }
        else if (Model.RobotInitialIds.Contains(id.Key))
        {
            <div class="bg-image hover-overlay" id="@id.Key">R1</div>
        }
        else if (Model.UnreachbleIds.Contains(id.Key))
        {
            //não adicionar nada
        }
        else if (id.Key == "O11")
        {
            <div class="bg-image hover-overlay" id="@id.Key">X</div>
        }
        else
        {
            <div class="bg-image hover-overlay" id="@id.Key">⠀⠀⠀⠀⠀⠀⠀⠀⠀</div>
        }
    }
</div>

<br>
<br>

<div>
    <label>
        Insira o valor: <input style="width: 350px" class="form-control" type="text" placeholder="Insira o local onde tu quer que o robô vá!" />
    </label>
</div>

<br>
<br>

<div>
    <div>
        <label>Selecione um dos algoritmos:</label>
    </div>
    <button type="button" class="alert" onclick="WalkThrough();">Algoritmo 1</button>
    <button class="alert">Algoritmo 2</button>
    <button class="alert">Algoritmo 3</button>
    <button class="alert">Algoritmo 4</button>
    <button class="alert">Algoritmo 5</button>
    <asp>
</div>

<script>

    function sleep(milliseconds) {
        const date = Date.now();
        let currentDate = null;
        do {
            currentDate = Date.now();
        } while (currentDate - date < milliseconds);
    }

    async function WalkThrough()
    {
        var path = ["A0", "B0", "C0", "D0", "E0", "F0", "F1", "F2", "F3", "F4"];
        count = 10;
        for (var i = 0; i < count;i++)
        {
            document.getElementById(path[i]).innerHTML = "X";
            await sleep(1000);
            document.getElementById(path[i]).innerHTML = "O";
            await sleep(1000);
        }
    }

    function sleep(ms) {
        return new Promise(
            resolve => setTimeout(resolve, ms)
        );
    }
</script>

<style>
    .grid-container {
        width: auto;
        display: grid;
        grid-template-columns: 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px 50px;
        grid-gap: 5px;
        background-color: #ababb8;
        padding: 5px;
    }

        .grid-container > div {
            background-color: #c5c5de;
            text-align: center;
            padding: 0px;
            font-size: 25px;
        }
</style>
